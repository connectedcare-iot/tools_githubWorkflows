name: Basic CI
on:
  workflow_call:
    secrets:
      ssh_private_key:
        required: true
      ssh_package_token:
        required: true

env:
  BUILD_TYPE: MinSizeRel
  SSH_AUTH_SOCK: /tmp/ssh_agent.sock

jobs:
  unit_test:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/connectedcare-iot/unit_test_ci:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.ssh_package_token }}

    steps:

      - name: Check out Repository
        uses: actions/checkout@v3

      - uses: webfactory/ssh-agent@v0.5.4
        with:
            ssh-private-key: ${{ secrets.ssh_private_key }}
    
      - name: Configure CMake Optimized
        run: cmake -B ./build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DGIT_SUBMODULE=ON

      - name: Build
        run: |
          cmake --build ./build --config ${{env.BUILD_TYPE}}

      - name: Test
        working-directory: ./build
        run: ctest -C ${{env.BUILD_TYPE}} -j 10 --output-on-failure
        
      - name: Upload Test Result
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: TestLog.txt
          path: ./build/Testing/Temporary/LastTest.log


  coverage_test:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/connectedcare-iot/unit_test_ci:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.ssh_package_token }}

    steps:

      - name: Check out Repository
        uses: actions/checkout@v3

      - uses: webfactory/ssh-agent@v0.5.4
        with:
            ssh-private-key: ${{ secrets.ssh_private_key }}
    
      - name: Configure CMake in Debug Mode
        run: cmake -B ./build -DCMAKE_BUILD_TYPE=Debug -DCODE_COVERAGE=ON -DGIT_SUBMODULE=ON

      - name: Build in Debug Mode
        run: |
          cmake --build ./build --config Debug

      - name: Prepare Coverage Test
        run: |
          cmake --build ./build --config Debug --target ccov-preprocessing

      - name: Test in Debug Mode
        working-directory: ./build
        run: ctest -C Debug -j 10 --output-on-failure

      - name: Build Coverage Test
        run: |
          cmake --build ./build --config Debug --target ccov-all
        
      - name: Upload Test Result
        uses: actions/upload-artifact@v2
        with:
          name: CodeCoverage
          path: ./build/ccov

  doxygen_test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out Repository
        uses: actions/checkout@v3

      - name: run Doxygen
        uses: mattnotmitt/doxygen-action@v1.9.2
        with:
            working-directory: './doc'
        
      - name: Upload Documentation
        uses: actions/upload-artifact@v2
        with:
          name: DoxygenDocumentation
          path: ./dock/html