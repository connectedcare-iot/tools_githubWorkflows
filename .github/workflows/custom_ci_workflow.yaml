name: Basic CI
on:
  workflow_call:
    secrets:
      ssh_private_key:
        required: true

env:
  BUILD_TYPE: MinSizeRel
  SSH_AUTH_SOCK: /tmp/ssh_agent.sock

jobs:
  unit_test:
    runs-on: ubuntu-latest
    steps:

      - name: Check out Repository
        uses: actions/checkout@v2

      - uses: webfactory/ssh-agent@v0.5.3
        with:
            ssh-private-key: ${{ secrets.ssh_private_key }}
    
      - name: Configure CMake Optimized
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build
        run: |
          cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: Test
        working-directory: ${{github.workspace}}/build
        run: ctest -C ${{env.BUILD_TYPE}} -j 10
        
      - name: Upload Test Result
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: TestLog.txt
          path: ${{github.workspace}}/build/Testing/Temporary/LastTest.log


  coverage_test:
    runs-on: ubuntu-latest

    steps:

      - name: Check out Repository
        uses: actions/checkout@v2

      - uses: webfactory/ssh-agent@v0.5.3
        with:
            ssh-private-key: ${{ secrets.ssh_private_key }}

      - name: install lcov
        run: sudo apt-get install -y lcov
    
      - name: Configure CMake in Debug Mode
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=Debug -DCODE_COVERAGE=ON

      - name: Build in Debug Mode
        run: |
          cmake --build ${{github.workspace}}/build --config Debug

      - name: Prepare Coverage Test
        run: |
          cmake --build ${{github.workspace}}/build --config Debug --target ccov-preprocessing

      - name: Test in Debug Mode
        working-directory: ${{github.workspace}}/build
        run: ctest -C Debug -j 10

      - name: Build Coverage Test
        run: |
          cmake --build ${{github.workspace}}/build --config Debug --target ccov-all
        
      - name: Upload Test Result
        uses: actions/upload-artifact@v2
        with:
          name: CodeCoverage
          path: ${{github.workspace}}/build/ccov

  doxigen_test:
    runs-on: ubuntu-latest

    steps:
      - name: Check out Repository
        uses: actions/checkout@v2

      - name: install Doxygen
        working-directory: ${{github.workspace}}/doc
        run: sudo apt-get install -y doxygen

      - name: run Doxygen
        working-directory: ${{github.workspace}}/doc
        run: ( cat Doxyfile ; echo "WARN_AS_ERROR=YES" ) | doxygen -